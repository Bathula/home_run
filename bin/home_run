#!/usr/bin/env ruby

require 'optparse'

command = :run
lib = File.expand_path('../../ext', __FILE__)

opts = OptionParser.new do |opts|
  opts.banner = "home_run: Fast Date/DateTime classes for ruby"
  opts.define_head "Usage: home_run (--install | --uninstall | command)"
  opts.separator ""
  opts.separator "Options:"

  opts.on_tail("--install", "install home_run to site_ruby") do
    command = :install
  end

  opts.on_tail("--uninstall", "uninstall home_run from site_ruby") do
    command = :uninstall
  end

  opts.on_tail("--bench", "benchmark home_run compared to the standard library") do
    command = :bench
  end
end
opts.order!

case command
when :bench
  Dir.chdir(File.join(lib, '..'))
  require 'rake'
  load './Rakefile'
  Rake::Task[:bench_all].invoke
when :install
  Dir.chdir(lib)
  require 'rbconfig'
  require 'fileutils'
  FUV = FileUtils::Verbose
  FUV.cp("date.rb", Config::CONFIG['sitelibdir'])
  FUV.mkdir_p(File.join(Config::CONFIG['sitelibdir'], 'date'))
  FUV.cp("date/format.rb", File.join(Config::CONFIG['sitelibdir'], 'date'))
  if File.exists?('date.so')
    FUV.cp("date.so", Config::CONFIG['sitearchdir'])
  end
  if File.exists?('1.8/date.so')
    FUV.mkdir_p(File.join(Config::CONFIG['sitearchdir'], '1.8'))
    FUV.cp("1.8/date.so", File.join(Config::CONFIG['sitearchdir'], '1.8'))
  end
  if File.exists?('1.9/date.so')
    FUV.mkdir_p(File.join(Config::CONFIG['sitearchdir'], '1.9'))
    FUV.cp("1.9/date.so", File.join(Config::CONFIG['sitearchdir'], '1.9'))
  end
when :uninstall
  require 'rbconfig'
  require 'fileutils'
  FUV = FileUtils::Verbose
  FUV.rm_f(File.join(Config::CONFIG['sitelibdir'], 'date.rb'))
  FUV.rm_f(File.join(Config::CONFIG['sitelibdir'], 'date/format.rb'))
  FUV.rmdir(File.join(Config::CONFIG['sitelibdir'], 'date')) rescue nil
  FUV.rm_f(File.join(Config::CONFIG['sitearchdir'], 'date.so'))
  FUV.rm_f(File.join(Config::CONFIG['sitearchdir'], '1.8/date.so'))
  FUV.rmdir(File.join(Config::CONFIG['sitearchdir'], '1.8')) rescue nil
  FUV.rm_f(File.join(Config::CONFIG['sitearchdir'], '1.9/date.so'))
  FUV.rmdir(File.join(Config::CONFIG['sitearchdir'], '1.9')) rescue nil
else
  ENV['RUBYOPT'] = "-rdate #{ENV['RUBYOPT']}"
  ENV['RUBYLIB'] = [lib, ENV['RUBYLIB']].join(File::PATH_SEPARATOR)
  exec(*ARGV)
end
